--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=12 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:19:05:46:40:SJ cbx_lpm_add_sub 2017:10:19:05:46:40:SJ cbx_lpm_compare 2017:10:19:05:46:40:SJ cbx_lpm_decode 2017:10:19:05:46:40:SJ cbx_mgl 2017:10:19:06:38:12:SJ cbx_nadder 2017:10:19:05:46:40:SJ cbx_stratix 2017:10:19:05:46:40:SJ cbx_stratixii 2017:10:19:05:46:40:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_pma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1611w[1..0]	: WIRE;
	w_anode1620w[3..0]	: WIRE;
	w_anode1637w[3..0]	: WIRE;
	w_anode1647w[3..0]	: WIRE;
	w_anode1657w[3..0]	: WIRE;
	w_anode1667w[3..0]	: WIRE;
	w_anode1677w[3..0]	: WIRE;
	w_anode1687w[3..0]	: WIRE;
	w_anode1697w[3..0]	: WIRE;
	w_anode1709w[1..0]	: WIRE;
	w_anode1716w[3..0]	: WIRE;
	w_anode1727w[3..0]	: WIRE;
	w_anode1737w[3..0]	: WIRE;
	w_anode1747w[3..0]	: WIRE;
	w_anode1757w[3..0]	: WIRE;
	w_anode1767w[3..0]	: WIRE;
	w_anode1777w[3..0]	: WIRE;
	w_anode1787w[3..0]	: WIRE;
	w_data1609w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[11..0] = eq_wire[11..0];
	eq_wire[] = ( ( w_anode1787w[3..3], w_anode1777w[3..3], w_anode1767w[3..3], w_anode1757w[3..3], w_anode1747w[3..3], w_anode1737w[3..3], w_anode1727w[3..3], w_anode1716w[3..3]), ( w_anode1697w[3..3], w_anode1687w[3..3], w_anode1677w[3..3], w_anode1667w[3..3], w_anode1657w[3..3], w_anode1647w[3..3], w_anode1637w[3..3], w_anode1620w[3..3]));
	w_anode1611w[] = ( (w_anode1611w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1620w[] = ( (w_anode1620w[2..2] & (! w_data1609w[2..2])), (w_anode1620w[1..1] & (! w_data1609w[1..1])), (w_anode1620w[0..0] & (! w_data1609w[0..0])), w_anode1611w[1..1]);
	w_anode1637w[] = ( (w_anode1637w[2..2] & (! w_data1609w[2..2])), (w_anode1637w[1..1] & (! w_data1609w[1..1])), (w_anode1637w[0..0] & w_data1609w[0..0]), w_anode1611w[1..1]);
	w_anode1647w[] = ( (w_anode1647w[2..2] & (! w_data1609w[2..2])), (w_anode1647w[1..1] & w_data1609w[1..1]), (w_anode1647w[0..0] & (! w_data1609w[0..0])), w_anode1611w[1..1]);
	w_anode1657w[] = ( (w_anode1657w[2..2] & (! w_data1609w[2..2])), (w_anode1657w[1..1] & w_data1609w[1..1]), (w_anode1657w[0..0] & w_data1609w[0..0]), w_anode1611w[1..1]);
	w_anode1667w[] = ( (w_anode1667w[2..2] & w_data1609w[2..2]), (w_anode1667w[1..1] & (! w_data1609w[1..1])), (w_anode1667w[0..0] & (! w_data1609w[0..0])), w_anode1611w[1..1]);
	w_anode1677w[] = ( (w_anode1677w[2..2] & w_data1609w[2..2]), (w_anode1677w[1..1] & (! w_data1609w[1..1])), (w_anode1677w[0..0] & w_data1609w[0..0]), w_anode1611w[1..1]);
	w_anode1687w[] = ( (w_anode1687w[2..2] & w_data1609w[2..2]), (w_anode1687w[1..1] & w_data1609w[1..1]), (w_anode1687w[0..0] & (! w_data1609w[0..0])), w_anode1611w[1..1]);
	w_anode1697w[] = ( (w_anode1697w[2..2] & w_data1609w[2..2]), (w_anode1697w[1..1] & w_data1609w[1..1]), (w_anode1697w[0..0] & w_data1609w[0..0]), w_anode1611w[1..1]);
	w_anode1709w[] = ( (w_anode1709w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1716w[] = ( (w_anode1716w[2..2] & (! w_data1609w[2..2])), (w_anode1716w[1..1] & (! w_data1609w[1..1])), (w_anode1716w[0..0] & (! w_data1609w[0..0])), w_anode1709w[1..1]);
	w_anode1727w[] = ( (w_anode1727w[2..2] & (! w_data1609w[2..2])), (w_anode1727w[1..1] & (! w_data1609w[1..1])), (w_anode1727w[0..0] & w_data1609w[0..0]), w_anode1709w[1..1]);
	w_anode1737w[] = ( (w_anode1737w[2..2] & (! w_data1609w[2..2])), (w_anode1737w[1..1] & w_data1609w[1..1]), (w_anode1737w[0..0] & (! w_data1609w[0..0])), w_anode1709w[1..1]);
	w_anode1747w[] = ( (w_anode1747w[2..2] & (! w_data1609w[2..2])), (w_anode1747w[1..1] & w_data1609w[1..1]), (w_anode1747w[0..0] & w_data1609w[0..0]), w_anode1709w[1..1]);
	w_anode1757w[] = ( (w_anode1757w[2..2] & w_data1609w[2..2]), (w_anode1757w[1..1] & (! w_data1609w[1..1])), (w_anode1757w[0..0] & (! w_data1609w[0..0])), w_anode1709w[1..1]);
	w_anode1767w[] = ( (w_anode1767w[2..2] & w_data1609w[2..2]), (w_anode1767w[1..1] & (! w_data1609w[1..1])), (w_anode1767w[0..0] & w_data1609w[0..0]), w_anode1709w[1..1]);
	w_anode1777w[] = ( (w_anode1777w[2..2] & w_data1609w[2..2]), (w_anode1777w[1..1] & w_data1609w[1..1]), (w_anode1777w[0..0] & (! w_data1609w[0..0])), w_anode1709w[1..1]);
	w_anode1787w[] = ( (w_anode1787w[2..2] & w_data1609w[2..2]), (w_anode1787w[1..1] & w_data1609w[1..1]), (w_anode1787w[0..0] & w_data1609w[0..0]), w_anode1709w[1..1]);
	w_data1609w[2..0] = data_wire[2..0];
END;
--VALID FILE

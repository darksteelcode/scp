60 1024
[9:0]: DECODE_NEXT - Addrs of next microinstruction
10: NEW_INSTR - Decode IR instead of DECODE_NEXT
11: PC_INC - Increment the PC - microcode instructions should increment the PC in the same cycle as NEW_INSTR, so that each instr is entered with PC set to the bit after it
12: MDR_OUT_HIGH_WE - latch mdr into high byte
13: MDR_OUT_LOW_WE - latch mdr into low byte
[15:14]: MAR_SEL - 0=AB_OUT, 1=MDR, 2=PC, 3=SP
16: A_BUS_WE - set a to value on bus
17: B_BUS_WE - set b to value on bus
18: A_INC - increment a
19: A_DEC - deincrement a
20: B_INC - increment b
21: B_DEC - deincrement b
22: MDR_HIGH_RST - set high byte of mdr to zero
23: AB_OUT_SEL - select reg on ab bus out, 0=A, 1=B
24: MDR_OUT_BYTE_SEL - selects from MDR_AB_SEL byte to be put on mdr out 0=low, 1=high
25: MEM_WE - write byte from mdr sel into memory
27: MDR_INC - increments the mdr reg
28: A_ALU_WE - write alu to a
29: B_A_WE - write b to a
[34:30]: ALU_OP - see alu.v in quartus/alu for all alu ops
35: PC_BUS_WE - write a or b (selected by AB_OUT_SEL) into pc
36: PC_MDR_WE - write mdr into pc
37: PC_COND_EN - Enable pc conditional latch
38: PC_COND_MODE - 0=latch if not zero, 1=latch if zero
[40:39]: MDR_AB_SEL - selects which reg to be put into MDR_OUT_BYTE_SEL 0=a, 1=b, 2=pc
26: SP_BUS_WE - write a or b into sp
41: SP_ADD_WE - write sp+mdr (output from sp_adder) into sp
42: SP_INC - increment sp
43: SP_DEC - deincrement sp
[45:44]: BUS_IN_SEL - selects signal to be written into a and b 0=mdr, 1=pc, 2=sp+mdr, 3=io_data
46: IO_DATA_WE - write a or b into io_data
47: IO_ADDR_WE - write a or b into io_addr
48: IO_WE - sets io_we high
49: PTB_WE - write a or b into ptb
50: PRIV_WE - set priv level
51: PRIV_LV - priv level to set (0=sys, 1=usr)
52: MMU_WE - write reg a into the page being accessed by the mar
53: PC_DEC - deincrement the program counter
54: PC_INT_WE - write the int addr into the pc
55: SP_JUST_MDR - don't add sp to sp_add bus
56: IO_ADDR_MDR_WE - write mdr into io_addr bus
57: PC_CPY_WE - write the pc into the pc_cpy reg
58: AB_IO_IN_SEL - select which io signal goes into BUS_IN_SEL 0=io, 1=pc_cpy